类继承：

	继承共性：
		1. 派生类只能通过基类方法访问基类私有成员 ；
		1. 派生类对象可以使用基类方法 （非虚有）
		2. 基类指针可以指向派生类对象 （不可逆）；
		3. 基类引用可以引用派生类对象 （不可逆）；
		4. 可以将基类对象初始化为派生类对象 （只复制派生类中嵌套的基类部分）；
		5. 可以将派生类对象赋给基类对象 （方法同上）


	内容准备 ：

		代码重用问题：

			重新定义函数：

				如果在派生类中重新定义了方法 ， 使用基类方法时必须使用作用域解析运算符来特别指出使用了
				哪个类方法，
				如果派生类中没有重新定义该方法则可以不使用作用域解析运算符 ；

				如果基类声明被重载了 ， 则应在派生类中重新定义所有的基类版本 ， 如果只定义了一个版本，
				则另外的版本将被隐藏 ；


			虚方法 ：

				1. 方法在基类被声明为虚方法后， 他在派生类中将自动成为虚方法 ， 然而 ， 也可以在派生类
				   中使用关键字 virtual 来指出哪些是虚方法 ；

				2. 涉及到基类指针或引用调用派生类对象时 ， 要将析构函数设为虚函数 ；

				3. 编译器对虚函数使用动态联编  

				4. 虚方法主要用于简化基类指针或引用调用派生类问题

			访问控制 （protected）:

				对于外界来说 ，保护成员与私有成员类似 ；
				对于派生类来说 ，保护成员与共有成员类似 ；


	共有继承：
		
		1. 将基类的共有方法 ， 继承为派生类的共有方法 ；
		2. 基类的保护成员成为派生类的保护成员 ；

	私有继承：

		1. 基类的共有成员及保护成员都将成为派生类的私有成员 ； // 下一级 派生类 将不能访问 ；
		2. 使用私有派生时 ， 只能在派生类中使用基类的方法 ； 
		3. 可以在派生类中使用强制类型转换来访问基类 ;

	保护继承：  

		使用保护继承时 ， 基类的共有成员跟保护成员都成为派生类的保护成员

	包含了类对象的类：

		1. 初始化时使用的是对象名 ， 而不是类名 ；
		2. 被包含对象的接口不是共有的 ， 但可以在类方法中通过类对象调用类方法的方式使用


	多重继承 ：

		
		虚基类 ：

			1. 通过在类声明中使用关键字 virtual 来把基类用作虚基类 ；
 			2. 所有的以相同虚基类派生出的类共享一个基类副本 ；
			3. 虚基类不允许通过中间类将信息传递给基类 ；																																					




















